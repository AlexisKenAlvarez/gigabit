import { GetServerSideProps, type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { AuthUser, userValues } from "utils/interface";
import { GetSessionParams, signOut } from "next-auth/react";
import { getSession } from "next-auth/react";
import { PrismaClient } from "@prisma/client";
import HeroCanvas from "~/canvas/HeroCanvas";

const prisma = new PrismaClient()

export const getServerSideProps: GetServerSideProps = async (context: GetSessionParams | undefined) => {
    const session = await getSession(context)

    if (!session) {
        return {
            redirect: {
                destination: '/login',
                permanent: false,
            },
        }
    } else {
        // IF THERE IS A SESSION

        const user = await prisma.user.findUnique({
            where: {
                email: session.user!.email,
            }
        })

        return {
            props: {
                name: session.user!.name,
                email: session.user!.email,
                verified: user?.verified
            }
        }
    }
}

const Home: NextPage<AuthUser> = ({ name, email, verified }) => {

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <section>
                <div className="w-full h-screen">
                    <HeroCanvas />
                </div>
            </section>
        </>
    );



};

export default Home;
